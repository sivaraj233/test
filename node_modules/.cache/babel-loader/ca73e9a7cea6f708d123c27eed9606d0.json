{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sivaraj/Sivaraj/my-app/src/component/TaskManagement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Fragment, useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Popover, TextField, Typography, Select, MenuItem, InputLabel } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\n\nconst TaskManagement = props => {\n  _s();\n\n  const [rows, setRows] = useState('');\n  const classes = useStyles();\n  let rowsVaue = [];\n  const columns = [{\n    field: 'task_no',\n    headerName: 'Task No',\n    width: 150\n  }, {\n    field: 'task_description',\n    headerName: 'Task Description',\n    width: 180\n  }, {\n    field: 'start_time',\n    headerName: 'Start Time',\n    width: 250\n  }, {\n    field: 'end_time',\n    headerName: 'End Time',\n    width: 250\n  }, {\n    field: 'assign_user',\n    headerName: 'Assign User',\n    description: 'This column has a value getter and is not sortable.',\n    width: 250\n  }, {\n    field: 'created_by',\n    headerName: 'Create User',\n    width: 250\n  }, {\n    field: 'created_date',\n    headerName: 'Create Date',\n    width: 250\n  }];\n\n  const callTask = async () => {\n    await fetch(\"http://localhost:8000/api/task/\", {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n      setRows(response);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    console.log(localStorage.getItem('token'));\n    callTask();\n    userCallList();\n  }, []);\n  const [task, setTask] = useState([]);\n  const [taskNo, setTaskNo] = useState([]);\n  const [taskDesc, setTaskDesc] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [userList, setUserList] = useState();\n  const [status, setStatus] = React.useState();\n\n  const handleSubmit = event => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setAnchorEl(null);\n  };\n\n  const taskInsert = async => {\n    fetch('http://0.0.0.0:8000/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"task_no\": taskNo,\n        \"task_description\": taskDesc,\n        \"start_time\": \"\",\n        \"end_time\": \"\"\n      })\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const taskAdd = event => {\n    event.preventDefault();\n    taskInsert();\n  };\n\n  const listUser = async () => {\n    await fetch(\"http://localhost:8000/api/userlist/\", {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n      setUserList(response);\n    }).catch(error => console.log(error));\n  };\n\n  const userCallList = event => {\n    listUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: [rows ? /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"Col\",\n              children: col.headerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows && rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.task_no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.task_description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.start_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.end_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.assign_user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.create_user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.created_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \" Add New Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: 1,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: taskAdd,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"task no\",\n              label: \"Task No\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"task desc\",\n              label: \"Task Description\",\n              variant: \"outlined\",\n              multiline: true,\n              rows: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"datetime-local\",\n              label: \"Start Date\",\n              type: \"datetime-local\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: status,\n              onChange: event => setStatus(event.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Started',\n                children: \"Started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'In Progress',\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Finish',\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"User List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: status,\n              onChange: event => setStatus(event.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Started',\n                children: \"Started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'In Progress',\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Finish',\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              className: \"button-block\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskManagement, \"JCzlt+Q00tAu9CmR3sZ68g6gDg4=\", false, function () {\n  return [useStyles];\n});\n\n_c = TaskManagement;\nexport default TaskManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskManagement\");","map":{"version":3,"sources":["/home/sivaraj/Sivaraj/my-app/src/component/TaskManagement.jsx"],"names":["React","Component","Fragment","useEffect","useState","DataGrid","makeStyles","Button","Grid","Popover","TextField","Typography","Select","MenuItem","InputLabel","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Paper","Checkbox","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","TaskManagement","props","rows","setRows","classes","rowsVaue","columns","field","headerName","description","callTask","fetch","method","headers","Authorization","localStorage","getItem","then","res","json","response","console","log","catch","error","userCallList","task","setTask","taskNo","setTaskNo","taskDesc","setTaskDesc","open","setOpen","anchorEl","setAnchorEl","userList","setUserList","status","setStatus","handleSubmit","event","currentTarget","handleClose","taskInsert","async","body","JSON","stringify","data","taskAdd","preventDefault","listUser","table","map","col","row","task_no","task_description","start_time","end_time","assign_user_name","create_user_name","created_date","vertical","horizontal","shrink","target","value"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Popover, TextField, Typography, Select, MenuItem, InputLabel } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst TaskManagement = (props) => {\n  const [rows, setRows] = useState('')\n  const classes = useStyles();\n  let rowsVaue = []\n  const columns = [\n    { field: 'task_no', headerName: 'Task No', width: 150 },\n    { field: 'task_description', headerName: 'Task Description', width: 180 },\n    { field: 'start_time', headerName: 'Start Time', width: 250 },\n    { field: 'end_time', headerName: 'End Time', width: 250 },\n    { field: 'assign_user', headerName: 'Assign User', description: 'This column has a value getter and is not sortable.', width: 250 },\n    { field: 'created_by', headerName: 'Create User', width: 250 },\n    { field: 'created_date', headerName: 'Create Date', width: 250 },\n  ];\n  const callTask = async () => {\n    await fetch(\"http://localhost:8000/api/task/\",\n      {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }\n    )\n      .then(res => res.json())\n      .then(response => {\n        console.log(response)\n        setRows(response)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  useEffect(() => {\n    console.log(localStorage.getItem('token'))\n    callTask()\n    userCallList()\n  }, []);\n\n  const [task, setTask] = useState([])\n  const [taskNo, setTaskNo] = useState([])\n  const [taskDesc, setTaskDesc] = useState([])\n  const [open, setOpen] = useState(false)\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [userList, setUserList] = useState()\n  const [status, setStatus] = React.useState()\n  const handleSubmit = (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true)\n  };\n  const handleClose = () => {\n    setOpen(false)\n    setAnchorEl(null);\n  };\n  const taskInsert = async => {\n    fetch('http://0.0.0.0:8000/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"task_no\": taskNo,\n        \"task_description\": taskDesc,\n        \"start_time\": \"\",\n        \"end_time\": \"\",\n      })\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n  }\n\n  const taskAdd = (event) => {\n    event.preventDefault();\n    taskInsert();\n  };\n  const listUser = async() => {\n    await fetch(\"http://localhost:8000/api/userlist/\",\n      {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }\n    )\n      .then(res => res.json())\n      .then(response => {\n        console.log(response)\n        setUserList(response)\n      })\n      .catch((error) => console.log(error))\n  }\n  \n  const userCallList = (event) =>{\n    listUser()\n  }\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      {  rows ?\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((col) => (\n                  <TableCell component=\"th\" scope=\"Col\">\n                    {col.headerName}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n\n              {rows && rows.map((row) => (\n                <TableRow>\n                  <TableCell>\n                    {row.task_no}\n                  </TableCell>\n                  <TableCell>\n                    {row.task_description}\n                  </TableCell>\n                  <TableCell>\n                    {row.start_time}\n                  </TableCell>\n                  <TableCell>\n                    {row.end_time}\n                  </TableCell>\n                  <TableCell>\n                    {row.assign_user_name}\n                  </TableCell>\n                  <TableCell>\n                    {row.create_user_name}\n                  </TableCell>\n                  <TableCell>\n                    {row.created_date}\n                  </TableCell>\n                </TableRow>\n\n              ))}\n\n            </TableBody>\n          </Table>\n        </TableContainer>\n        :\n        <Button onClick={handleSubmit}><Typography> Add New Task </Typography></Button>\n      }\n      <Popover\n        id={1}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}>\n        <Grid container className={classes.root} spacing={2}>\n          <Grid item xs={12}>\n            <form onSubmit={taskAdd}>\n              <TextField id=\"task no\" label=\"Task No\" variant=\"outlined\" />\n              <TextField id=\"task desc\" label=\"Task Description\" variant=\"outlined\" multiline rows={5} />\n              <TextField\n                id=\"datetime-local\"\n                label=\"Start Date\"\n                type=\"datetime-local\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={status}\n                onChange={(event) => setStatus(event.target.value)}\n              >\n                <MenuItem value={'Started'}>Started</MenuItem>\n                <MenuItem value={'In Progress'}>In Progress</MenuItem>\n                <MenuItem value={'Finish'}>Finish</MenuItem>\n              </Select>\n              <InputLabel id=\"demo-simple-select-label\">User List</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={status}\n                onChange={(event) => setStatus(event.target.value)}\n              >\n                <MenuItem value={'Started'}>Started</MenuItem>\n                <MenuItem value={'In Progress'}>In Progress</MenuItem>\n                <MenuItem value={'Finish'}>Finish</MenuItem>\n              </Select>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                className=\"button-block\"\n              >\n                Submit\n</Button>\n            </form>\n          </Grid>\n        </Grid>\n      </Popover>\n    </div>\n  )\n}\nexport default TaskManagement"]},"metadata":{},"sourceType":"module"}